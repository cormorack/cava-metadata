name: Build and Push Images

on:
  push:
    branches:
      - dev
    tags:
      - '*.*.*'
    paths-ignore:
      - README.md
      - "resources/helm/**"
      - "**/test-chart.yml"
      - ".ci-helpers/**"
  workflow_dispatch:

env:
  DOCKER_ORG: cormorack
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE_NAME: cava-metadata
  CONDA_VERSION: 4.9.2
  PYTHON_VERSION: 3.7

jobs:
  docker-build:
    name: ${{ matrix.IMAGE }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Production Docker Tag
        if: "contains(github.ref, 'refs/tags')"
        run: |
          DOCKER_TAG=$(echo "$GITHUB_REF" | sed 's/refs\/tags\///g')
          IMAGE_SPEC_LATEST="${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:latest"
          echo "IMAGE_SPEC_LATEST=${IMAGE_SPEC_LATEST}" >> $GITHUB_ENV
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
      - name: Set Development Docker Tag
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          SHA7="${GITHUB_SHA::7}"
          DOCKER_TAG=dev
          echo "DOCKER_TAG=${DOCKER_TAG}-${SHA7}" >> $GITHUB_ENV

      - name: Set Docker Image Spec
        run: |
          IMAGE_SPEC="${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}"
          echo "IMAGE_SPEC=${IMAGE_SPEC}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./resources/docker/Dockerfile
          push: true
          build-args: |
            CONDA_VERSION=${{ env.CONDA_VERSION }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          tags: |
            ${{ env.IMAGE_SPEC }}
            ${{ env.IMAGE_SPEC_LATEST }}